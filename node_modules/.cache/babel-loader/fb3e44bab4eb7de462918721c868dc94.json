{"ast":null,"code":"const debug = require('debug')('feathers:application');\n\nconst _require = require('@feathersjs/commons'),\n      stripSlashes = _require.stripSlashes;\n\nconst Uberproto = require('uberproto');\n\nconst events = require('./events');\n\nconst hooks = require('./hooks');\n\nconst version = require('./version');\n\nconst Proto = Uberproto.extend({\n  create: null\n});\nconst application = {\n  init() {\n    Object.assign(this, {\n      version,\n      methods: ['find', 'get', 'create', 'update', 'patch', 'remove'],\n      mixins: [],\n      services: {},\n      providers: [],\n      _setup: false,\n      settings: {}\n    });\n    this.configure(hooks());\n    this.configure(events());\n  },\n\n  get(name) {\n    return this.settings[name];\n  },\n\n  set(name, value) {\n    this.settings[name] = value;\n    return this;\n  },\n\n  disable(name) {\n    this.settings[name] = false;\n    return this;\n  },\n\n  disabled(name) {\n    return !this.settings[name];\n  },\n\n  enable(name) {\n    this.settings[name] = true;\n    return this;\n  },\n\n  enabled(name) {\n    return !!this.settings[name];\n  },\n\n  configure(fn) {\n    fn.call(this, this);\n    return this;\n  },\n\n  service(path, service) {\n    if (typeof service !== 'undefined') {\n      throw new Error('Registering a new service with `app.service(path, service)` is no longer supported. Use `app.use(path, service)` instead.');\n    }\n\n    const location = stripSlashes(path) || '/';\n    const current = this.services[location];\n\n    if (typeof current === 'undefined' && typeof this.defaultService === 'function') {\n      return this.use(location, this.defaultService(location)).service(location);\n    }\n\n    return current;\n  },\n\n  use(path, service, options = {}) {\n    if (typeof path !== 'string') {\n      throw new Error(`'${path}' is not a valid service path.`);\n    }\n\n    const location = stripSlashes(path) || '/';\n    const isSubApp = typeof service.service === 'function' && service.services;\n    const isService = this.methods.concat('setup').some(name => typeof service[name] === 'function');\n\n    if (isSubApp) {\n      const subApp = service;\n      Object.keys(subApp.services).forEach(subPath => this.use(`${location}/${subPath}`, subApp.service(subPath)));\n      return this;\n    }\n\n    if (!isService) {\n      throw new Error(`Invalid service object passed for path \\`${location}\\``);\n    } // If the service is already Uberproto'd use it directly\n\n\n    const protoService = Proto.isPrototypeOf(service) ? service : Proto.extend(service);\n    debug(`Registering new service at \\`${location}\\``); // Add all the mixins\n\n    this.mixins.forEach(fn => fn.call(this, protoService, location, options));\n\n    if (typeof protoService._setup === 'function') {\n      protoService._setup(this, location);\n    } // Run the provider functions to register the service\n\n\n    this.providers.forEach(provider => provider.call(this, protoService, location, options)); // If we ran setup already, set this service up explicitly\n\n    if (this._isSetup && typeof protoService.setup === 'function') {\n      debug(`Setting up service for \\`${location}\\``);\n      protoService.setup(this, location);\n    }\n\n    this.services[location] = protoService;\n    return this;\n  },\n\n  setup() {\n    // Setup each service (pass the app so that they can look up other services etc.)\n    Object.keys(this.services).forEach(path => {\n      const service = this.services[path];\n      debug(`Setting up service for \\`${path}\\``);\n\n      if (typeof service.setup === 'function') {\n        service.setup(this, path);\n      }\n    });\n    this._isSetup = true;\n    return this;\n  }\n\n};\nmodule.exports = application;","map":{"version":3,"sources":["/Users/parthjhaveri/Desktop/tile-geo/node_modules/@feathersjs/feathers/lib/application.js"],"names":["debug","require","stripSlashes","Uberproto","events","hooks","version","Proto","extend","create","application","init","Object","assign","methods","mixins","services","providers","_setup","settings","configure","get","name","set","value","disable","disabled","enable","enabled","fn","call","service","path","Error","location","current","defaultService","use","options","isSubApp","isService","concat","some","subApp","keys","forEach","subPath","protoService","isPrototypeOf","provider","_isSetup","setup","module","exports"],"mappings":"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","sourcesContent":["const debug = require('debug')('feathers:application');\nconst { stripSlashes } = require('@feathersjs/commons');\n\nconst Uberproto = require('uberproto');\nconst events = require('./events');\nconst hooks = require('./hooks');\nconst version = require('./version');\n\nconst Proto = Uberproto.extend({\n  create: null\n});\n\nconst application = {\n  init () {\n    Object.assign(this, {\n      version,\n      methods: [\n        'find', 'get', 'create', 'update', 'patch', 'remove'\n      ],\n      mixins: [],\n      services: {},\n      providers: [],\n      _setup: false,\n      settings: {}\n    });\n\n    this.configure(hooks());\n    this.configure(events());\n  },\n\n  get (name) {\n    return this.settings[name];\n  },\n\n  set (name, value) {\n    this.settings[name] = value;\n    return this;\n  },\n\n  disable (name) {\n    this.settings[name] = false;\n    return this;\n  },\n\n  disabled (name) {\n    return !this.settings[name];\n  },\n\n  enable (name) {\n    this.settings[name] = true;\n    return this;\n  },\n\n  enabled (name) {\n    return !!this.settings[name];\n  },\n\n  configure (fn) {\n    fn.call(this, this);\n\n    return this;\n  },\n\n  service (path, service) {\n    if (typeof service !== 'undefined') {\n      throw new Error('Registering a new service with `app.service(path, service)` is no longer supported. Use `app.use(path, service)` instead.');\n    }\n\n    const location = stripSlashes(path) || '/';\n    const current = this.services[location];\n\n    if (typeof current === 'undefined' && typeof this.defaultService === 'function') {\n      return this.use(location, this.defaultService(location))\n        .service(location);\n    }\n\n    return current;\n  },\n\n  use (path, service, options = {}) {\n    if (typeof path !== 'string') {\n      throw new Error(`'${path}' is not a valid service path.`);\n    }\n\n    const location = stripSlashes(path) || '/';\n    const isSubApp = typeof service.service === 'function' && service.services;\n    const isService = this.methods.concat('setup').some(name => typeof service[name] === 'function');\n\n    if (isSubApp) {\n      const subApp = service;\n\n      Object.keys(subApp.services).forEach(subPath =>\n        this.use(`${location}/${subPath}`, subApp.service(subPath))\n      );\n\n      return this;\n    }\n\n    if (!isService) {\n      throw new Error(`Invalid service object passed for path \\`${location}\\``);\n    }\n\n    // If the service is already Uberproto'd use it directly\n    const protoService = Proto.isPrototypeOf(service) ? service : Proto.extend(service);\n\n    debug(`Registering new service at \\`${location}\\``);\n\n    // Add all the mixins\n    this.mixins.forEach(fn => fn.call(this, protoService, location, options));\n\n    if (typeof protoService._setup === 'function') {\n      protoService._setup(this, location);\n    }\n\n    // Run the provider functions to register the service\n    this.providers.forEach(provider =>\n      provider.call(this, protoService, location, options)\n    );\n\n    // If we ran setup already, set this service up explicitly\n    if (this._isSetup && typeof protoService.setup === 'function') {\n      debug(`Setting up service for \\`${location}\\``);\n      protoService.setup(this, location);\n    }\n\n    this.services[location] = protoService;\n\n    return this;\n  },\n\n  setup () {\n    // Setup each service (pass the app so that they can look up other services etc.)\n    Object.keys(this.services).forEach(path => {\n      const service = this.services[path];\n\n      debug(`Setting up service for \\`${path}\\``);\n\n      if (typeof service.setup === 'function') {\n        service.setup(this, path);\n      }\n    });\n\n    this._isSetup = true;\n\n    return this;\n  }\n};\n\nmodule.exports = application;\n"]},"metadata":{},"sourceType":"script"}