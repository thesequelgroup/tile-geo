{"ast":null,"code":"const Service = require('@feathersjs/transport-commons/client');\n\nfunction socketioClient(connection, options) {\n  if (!connection) {\n    throw new Error('Socket.io connection needs to be provided');\n  }\n\n  const defaultService = function (name) {\n    const events = Object.keys(this.eventMappings || {}).map(method => this.eventMappings[method]);\n    const settings = Object.assign({}, options, {\n      events,\n      name,\n      connection,\n      method: 'emit'\n    });\n    return new Service(settings);\n  };\n\n  const initialize = function (app) {\n    if (typeof app.defaultService === 'function') {\n      throw new Error('Only one default client provider can be configured');\n    }\n\n    app.io = connection;\n    app.defaultService = defaultService;\n  };\n\n  initialize.Service = Service;\n  initialize.service = defaultService;\n  return initialize;\n}\n\nmodule.exports = socketioClient;\nmodule.exports.default = socketioClient;","map":{"version":3,"sources":["/Users/parthjhaveri/Desktop/tile-geo/node_modules/@feathersjs/socketio-client/lib/index.js"],"names":["Service","require","socketioClient","connection","options","Error","defaultService","name","events","Object","keys","eventMappings","map","method","settings","assign","initialize","app","io","service","module","exports","default"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,sCAAD,CAAvB;;AAEA,SAASC,cAAT,CAAyBC,UAAzB,EAAqCC,OAArC,EAA8C;AAC5C,MAAI,CAACD,UAAL,EAAiB;AACf,UAAM,IAAIE,KAAJ,CAAU,2CAAV,CAAN;AACD;;AAED,QAAMC,cAAc,GAAG,UAAUC,IAAV,EAAgB;AACrC,UAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKC,aAAL,IAAsB,EAAlC,EACZC,GADY,CACRC,MAAM,IAAI,KAAKF,aAAL,CAAmBE,MAAnB,CADF,CAAf;AAGA,UAAMC,QAAQ,GAAGL,MAAM,CAACM,MAAP,CAAc,EAAd,EAAkBX,OAAlB,EAA2B;AAC1CI,MAAAA,MAD0C;AAE1CD,MAAAA,IAF0C;AAG1CJ,MAAAA,UAH0C;AAI1CU,MAAAA,MAAM,EAAE;AAJkC,KAA3B,CAAjB;AAOA,WAAO,IAAIb,OAAJ,CAAYc,QAAZ,CAAP;AACD,GAZD;;AAcA,QAAME,UAAU,GAAG,UAAUC,GAAV,EAAe;AAChC,QAAI,OAAOA,GAAG,CAACX,cAAX,KAA8B,UAAlC,EAA8C;AAC5C,YAAM,IAAID,KAAJ,CAAU,oDAAV,CAAN;AACD;;AAEDY,IAAAA,GAAG,CAACC,EAAJ,GAASf,UAAT;AACAc,IAAAA,GAAG,CAACX,cAAJ,GAAqBA,cAArB;AACD,GAPD;;AASAU,EAAAA,UAAU,CAAChB,OAAX,GAAqBA,OAArB;AACAgB,EAAAA,UAAU,CAACG,OAAX,GAAqBb,cAArB;AAEA,SAAOU,UAAP;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBnB,cAAjB;AACAkB,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBpB,cAAzB","sourcesContent":["const Service = require('@feathersjs/transport-commons/client');\n\nfunction socketioClient (connection, options) {\n  if (!connection) {\n    throw new Error('Socket.io connection needs to be provided');\n  }\n\n  const defaultService = function (name) {\n    const events = Object.keys(this.eventMappings || {})\n      .map(method => this.eventMappings[method]);\n\n    const settings = Object.assign({}, options, {\n      events,\n      name,\n      connection,\n      method: 'emit'\n    });\n\n    return new Service(settings);\n  };\n\n  const initialize = function (app) {\n    if (typeof app.defaultService === 'function') {\n      throw new Error('Only one default client provider can be configured');\n    }\n\n    app.io = connection;\n    app.defaultService = defaultService;\n  };\n\n  initialize.Service = Service;\n  initialize.service = defaultService;\n\n  return initialize;\n}\n\nmodule.exports = socketioClient;\nmodule.exports.default = socketioClient;\n"]},"metadata":{},"sourceType":"script"}